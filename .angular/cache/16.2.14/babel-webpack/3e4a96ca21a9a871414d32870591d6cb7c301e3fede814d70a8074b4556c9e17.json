{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/email.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/progress-spinner\";\nfunction EmailComponent_mat_spinner_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 11);\n  }\n}\nclass EmailComponent {\n  constructor(email, snack) {\n    this.email = email;\n    this.snack = snack;\n    this.data = {\n      to: \"\",\n      subject: \"\",\n      message: \"\"\n    };\n  }\n  ngOnInit() {}\n  doSubmitForm() {\n    console.log(\"Data \", this.data);\n    if (this.data.to == '' || this.data.subject == '' || this.data.message == '') {\n      this.snack.open(\"FIELDS CAN NOT BE EMPTY!!\", \"Ok\");\n    }\n    this.email.sendEmail(this.data).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  }\n  static #_ = this.ɵfac = function EmailComponent_Factory(t) {\n    return new (t || EmailComponent)(i0.ɵɵdirectiveInject(i1.EmailService), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EmailComponent,\n    selectors: [[\"app-email\"]],\n    decls: 23,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"card\"], [3, \"ngSubmit\"], [\"appearance\", \"outline\", 1, \"field\"], [\"name\", \"to\", \"matInput\", \"\", \"placeholder\", \"To\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"subject\", \"matInput\", \"\", \"placeholder\", \"Subject\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"message\", \"rows\", \"10\", \"matInput\", \"\", \"placeholder\", \"Enter your message here...\", 3, \"ngModel\", \"ngModelChange\"], [\"style\", \"margin: auto;\", 4, \"ngIf\"], [1, \"example-button-container\", \"text-center\"], [\"type\", \"submit\", \"mat-fab\", \"\", \"extended\", \"\", \"color\", \"primary\"], [\"type\", \"reset\", \"mat-fab\", \"\", \"extended\", \"\"], [2, \"margin\", \"auto\"]],\n    template: function EmailComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function EmailComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.doSubmitForm();\n        });\n        i0.ɵɵelementStart(3, \"h1\");\n        i0.ɵɵtext(4, \"Compose Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-form-field\", 3)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Enter Reciever Mail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function EmailComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.data.to = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 3)(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Enter Subect\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function EmailComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.data.subject = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"mat-form-field\", 3)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Message\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"textarea\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function EmailComponent_Template_textarea_ngModelChange_16_listener($event) {\n          return ctx.data.message = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(17, EmailComponent_mat_spinner_17_Template, 1, 0, \"mat-spinner\", 7);\n        i0.ɵɵelementStart(18, \"div\", 8)(19, \"button\", 9);\n        i0.ɵɵtext(20, \"Send\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 10);\n        i0.ɵɵtext(22, \"Reset\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.data.to);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.data.subject);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.data.message);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.flag);\n      }\n    },\n    dependencies: [i3.NgIf, i4.MatFabButton, i5.MatFormField, i5.MatLabel, i6.MatInput, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.NgModel, i7.NgForm, i8.MatProgressSpinner],\n    styles: [\".field[_ngcontent-%COMP%]{\\n    width: 100%;\\n}\\n\\n.card[_ngcontent-%COMP%]{\\n    width: 50%;\\n    margin: auto;\\n    background-color: rgb(232, 226, 226);\\n    padding: 20px;\\n}\\n\\n.card[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{\\n    text-align: center;\\n}\\n\\n.container[_ngcontent-%COMP%]{\\n    margin-top: 40px;\\n}\\n\\n.text-center[_ngcontent-%COMP%]{\\n    text-align: center;\\n}\\n\\n.card[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{\\n    margin: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9lbWFpbC9lbWFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksVUFBVTtJQUNWLFlBQVk7SUFDWixvQ0FBb0M7SUFDcEMsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFdBQVc7QUFDZiIsInNvdXJjZXNDb250ZW50IjpbIi5maWVsZHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uY2FyZHtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjMyLCAyMjYsIDIyNik7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG59XHJcblxyXG4uY2FyZCBoMXtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmNvbnRhaW5lcntcclxuICAgIG1hcmdpbi10b3A6IDQwcHg7XHJcbn1cclxuXHJcbi50ZXh0LWNlbnRlcntcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmNhcmQgYnV0dG9ue1xyXG4gICAgbWFyZ2luOiA1cHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}\nexport { EmailComponent };","map":{"version":3,"names":["i0","ɵɵelement","EmailComponent","constructor","email","snack","data","to","subject","message","ngOnInit","doSubmitForm","console","log","open","sendEmail","subscribe","response","error","_","ɵɵdirectiveInject","i1","EmailService","i2","MatSnackBar","_2","selectors","decls","vars","consts","template","EmailComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","EmailComponent_Template_form_ngSubmit_2_listener","ɵɵtext","ɵɵelementEnd","EmailComponent_Template_input_ngModelChange_8_listener","$event","EmailComponent_Template_input_ngModelChange_12_listener","EmailComponent_Template_textarea_ngModelChange_16_listener","ɵɵtemplate","EmailComponent_mat_spinner_17_Template","ɵɵadvance","ɵɵproperty","flag"],"sources":["C:\\Users\\User\\Desktop\\emailgui\\src\\app\\components\\email\\email.component.ts","C:\\Users\\User\\Desktop\\emailgui\\src\\app\\components\\email\\email.component.html"],"sourcesContent":["import { UpperCasePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { EmailService } from 'src/app/service/email.service';\n\n@Component({\n  selector: 'app-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.css']\n})\nexport class EmailComponent implements OnInit {\n\n  data={\n    to:\"\",\n    subject:\"\",\n    message:\"\"\n  }\n\n  constructor(private email: EmailService, private snack: MatSnackBar){}\n\n  ngOnInit(): void {\n    \n  }\n\n  doSubmitForm(){\n    console.log(\"Data \", this.data);\n\n    if(this.data.to=='' || this.data.subject=='' || this.data.message ==''){\n\n      this.snack.open(\"FIELDS CAN NOT BE EMPTY!!\", \"Ok\")\n    }\n\n    this.email.sendEmail(this.data).subscribe(\n      response=>{\n        console.log(response);\n        \n      },\n      error=>{\n        console.log(error);\n        \n      }\n    )\n  }\n}\n","<div class=\"container\">\n\n    <div class=\"card\">\n\n        <form (ngSubmit)=\"doSubmitForm()\">\n\n            <h1>Compose Email</h1>\n            <mat-form-field class=\"field\" appearance=\"outline\">\n                <mat-label>Enter Reciever Mail</mat-label>\n                <input name=\"to\" [(ngModel)]=\"data.to\" matInput placeholder=\"To\">\n            </mat-form-field>\n\n            <mat-form-field class=\"field\" appearance=\"outline\">\n                <mat-label>Enter Subect</mat-label>\n                <input name=\"subject\" [(ngModel)]=\"data.subject\" matInput placeholder=\"Subject\">\n            </mat-form-field>\n\n            <mat-form-field class=\"field\" appearance=\"outline\">\n                <mat-label>Message</mat-label>\n                <textarea name=\"message\" [(ngModel)]=\"data.message\" rows=\"10\" matInput placeholder=\"Enter your message here...\"></textarea>\n            </mat-form-field>\n\n            <mat-spinner *ngIf=\"!flag\" style=\"margin: auto;\"></mat-spinner>\n\n            <div class=\"example-button-container text-center\">\n                <button type=\"submit\" mat-fab extended color=\"primary\">Send</button>\n                <button type=\"reset\" mat-fab extended>Reset</button>\n            </div>\n\n        </form>\n        <!-- {{ data | json}} -->\n    </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}