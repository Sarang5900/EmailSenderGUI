{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EmailComponent = class EmailComponent {\n  constructor(email, snack) {\n    this.email = email;\n    this.snack = snack;\n    this.data = {\n      to: \"\",\n      subject: \"\",\n      message: \"\"\n    };\n  }\n  ngOnInit() {}\n  doSubmitForm() {\n    console.log(\"Data \", this.data);\n    if (this.data.to == '' || this.data.subject == '' || this.data.message == '') {\n      this.snack.open(\"FIELDS CAN NOT BE EMPTY!!\", \"Ok\");\n    }\n    this.email.sendEmail(this.data).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  }\n};\nEmailComponent = __decorate([Component({\n  selector: 'app-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.css']\n})], EmailComponent);\nexport { EmailComponent };","map":{"version":3,"names":["Component","EmailComponent","constructor","email","snack","data","to","subject","message","ngOnInit","doSubmitForm","console","log","open","sendEmail","subscribe","response","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\User\\Desktop\\emailgui\\src\\app\\components\\email\\email.component.ts"],"sourcesContent":["import { UpperCasePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { EmailService } from 'src/app/service/email.service';\n\n@Component({\n  selector: 'app-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.css']\n})\nexport class EmailComponent implements OnInit {\n\n  data={\n    to:\"\",\n    subject:\"\",\n    message:\"\"\n  }\n\n  constructor(private email: EmailService, private snack: MatSnackBar){}\n\n  ngOnInit(): void {\n    \n  }\n\n  doSubmitForm(){\n    console.log(\"Data \", this.data);\n\n    if(this.data.to=='' || this.data.subject=='' || this.data.message ==''){\n\n      this.snack.open(\"FIELDS CAN NOT BE EMPTY!!\", \"Ok\")\n    }\n\n    this.email.sendEmail(this.data).subscribe(\n      response=>{\n        console.log(response);\n        \n      },\n      error=>{\n        console.log(error);\n        \n      }\n    )\n  }\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AASjD,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAQzBC,YAAoBC,KAAmB,EAAUC,KAAkB;IAA/C,KAAAD,KAAK,GAALA,KAAK;IAAwB,KAAAC,KAAK,GAALA,KAAK;IANtD,KAAAC,IAAI,GAAC;MACHC,EAAE,EAAC,EAAE;MACLC,OAAO,EAAC,EAAE;MACVC,OAAO,EAAC;KACT;EAEoE;EAErEC,QAAQA,CAAA,GAER;EAEAC,YAAYA,CAAA;IACVC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACP,IAAI,CAAC;IAE/B,IAAG,IAAI,CAACA,IAAI,CAACC,EAAE,IAAE,EAAE,IAAI,IAAI,CAACD,IAAI,CAACE,OAAO,IAAE,EAAE,IAAI,IAAI,CAACF,IAAI,CAACG,OAAO,IAAG,EAAE,EAAC;MAErE,IAAI,CAACJ,KAAK,CAACS,IAAI,CAAC,2BAA2B,EAAE,IAAI,CAAC;;IAGpD,IAAI,CAACV,KAAK,CAACW,SAAS,CAAC,IAAI,CAACT,IAAI,CAAC,CAACU,SAAS,CACvCC,QAAQ,IAAE;MACRL,OAAO,CAACC,GAAG,CAACI,QAAQ,CAAC;IAEvB,CAAC,EACDC,KAAK,IAAE;MACLN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;IAEpB,CAAC,CACF;EACH;CACD;AAjCYhB,cAAc,GAAAiB,UAAA,EAL1BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWpB,cAAc,CAiC1B;SAjCYA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}